{
  "id": "96208aa5-f3e1-4e14-9947-83de2c2901f8",
  "prevId": "ff37f94b-10a1-459e-87a2-8dda39e334c5",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "auth.audit_log_entries": {
      "name": "audit_log_entries",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "payload": {
          "name": "payload",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(64)",
          "primaryKey": false,
          "notNull": true,
          "default": "''"
        }
      },
      "indexes": {
        "audit_logs_instance_id_idx": {
          "name": "audit_logs_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.bookings": {
      "name": "bookings",
      "schema": "",
      "columns": {
        "booking_id": {
          "name": "booking_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "circuit_id": {
          "name": "circuit_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "tourist_id": {
          "name": "tourist_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "guide_id": {
          "name": "guide_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "booking_date": {
          "name": "booking_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "start_time": {
          "name": "start_time",
          "type": "time",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "booking_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "total_price": {
          "name": "total_price",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "bookings_circuit_id_circuits_circuit_id_fk": {
          "name": "bookings_circuit_id_circuits_circuit_id_fk",
          "tableFrom": "bookings",
          "tableTo": "circuits",
          "columnsFrom": [
            "circuit_id"
          ],
          "columnsTo": [
            "circuit_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "bookings_tourist_id_users_id_fk": {
          "name": "bookings_tourist_id_users_id_fk",
          "tableFrom": "bookings",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "tourist_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "bookings_guide_id_guide_profiles_guide_id_fk": {
          "name": "bookings_guide_id_guide_profiles_guide_id_fk",
          "tableFrom": "bookings",
          "tableTo": "guide_profiles",
          "columnsFrom": [
            "guide_id"
          ],
          "columnsTo": [
            "guide_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "storage.buckets": {
      "name": "buckets",
      "schema": "storage",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner": {
          "name": "owner",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "public": {
          "name": "public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "avif_autodetection": {
          "name": "avif_autodetection",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "file_size_limit": {
          "name": "file_size_limit",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "allowed_mime_types": {
          "name": "allowed_mime_types",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "bname": {
          "name": "bname",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.circuit_points": {
      "name": "circuit_points",
      "schema": "",
      "columns": {
        "circuit_id": {
          "name": "circuit_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "poi_id": {
          "name": "poi_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "sequence_order": {
          "name": "sequence_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "circuit_points_circuit_id_circuits_circuit_id_fk": {
          "name": "circuit_points_circuit_id_circuits_circuit_id_fk",
          "tableFrom": "circuit_points",
          "tableTo": "circuits",
          "columnsFrom": [
            "circuit_id"
          ],
          "columnsTo": [
            "circuit_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "circuit_points_poi_id_points_of_interest_poi_id_fk": {
          "name": "circuit_points_poi_id_points_of_interest_poi_id_fk",
          "tableFrom": "circuit_points",
          "tableTo": "points_of_interest",
          "columnsFrom": [
            "poi_id"
          ],
          "columnsTo": [
            "poi_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "circuit_points_circuit_id_poi_id_pk": {
          "name": "circuit_points_circuit_id_poi_id_pk",
          "columns": [
            "circuit_id",
            "poi_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.circuits": {
      "name": "circuits",
      "schema": "",
      "columns": {
        "circuit_id": {
          "name": "circuit_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "creator_id": {
          "name": "creator_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "city_id": {
          "name": "city_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "estimated_duration": {
          "name": "estimated_duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "distance": {
          "name": "distance",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "is_public": {
          "name": "is_public",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "circuits_creator_id_users_id_fk": {
          "name": "circuits_creator_id_users_id_fk",
          "tableFrom": "circuits",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "creator_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "circuits_city_id_cities_city_id_fk": {
          "name": "circuits_city_id_cities_city_id_fk",
          "tableFrom": "circuits",
          "tableTo": "cities",
          "columnsFrom": [
            "city_id"
          ],
          "columnsTo": [
            "city_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.cities": {
      "name": "cities",
      "schema": "",
      "columns": {
        "city_id": {
          "name": "city_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "coordinates": {
          "name": "coordinates",
          "type": "point",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.flow_state": {
      "name": "flow_state",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "auth_code": {
          "name": "auth_code",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge_method": {
          "name": "code_challenge_method",
          "type": "code_challenge_method",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "code_challenge": {
          "name": "code_challenge",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_type": {
          "name": "provider_type",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_access_token": {
          "name": "provider_access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "provider_refresh_token": {
          "name": "provider_refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "auth_code_issued_at": {
          "name": "auth_code_issued_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "flow_state_created_at_idx": {
          "name": "flow_state_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_auth_code": {
          "name": "idx_auth_code",
          "columns": [
            {
              "expression": "auth_code",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_user_id_auth_method": {
          "name": "idx_user_id_auth_method",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "authentication_method",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.guide_profiles": {
      "name": "guide_profiles",
      "schema": "",
      "columns": {
        "guide_id": {
          "name": "guide_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "verification_status": {
          "name": "verification_status",
          "type": "guide_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        },
        "rating": {
          "name": "rating",
          "type": "numeric(3, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "price_per_hour": {
          "name": "price_per_hour",
          "type": "numeric(10, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "available_hours": {
          "name": "available_hours",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "verified_at": {
          "name": "verified_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "guide_profiles_guide_id_users_id_fk": {
          "name": "guide_profiles_guide_id_users_id_fk",
          "tableFrom": "guide_profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "guide_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.identities": {
      "name": "identities",
      "schema": "auth",
      "columns": {
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "identity_data": {
          "name": "identity_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "provider": {
          "name": "provider",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "lower((identity_data ->> 'email'::text))",
            "type": "stored"
          }
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        }
      },
      "indexes": {
        "identities_email_idx": {
          "name": "identities_email_idx",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_pattern_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "identities_user_id_idx": {
          "name": "identities_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "identities_user_id_fkey": {
          "name": "identities_user_id_fkey",
          "tableFrom": "identities",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "identities_provider_id_provider_unique": {
          "name": "identities_provider_id_provider_unique",
          "nullsNotDistinct": false,
          "columns": [
            "provider_id",
            "provider"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.instances": {
      "name": "instances",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "uuid": {
          "name": "uuid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "raw_base_config": {
          "name": "raw_base_config",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_amr_claims": {
      "name": "mfa_amr_claims",
      "schema": "auth",
      "columns": {
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "authentication_method": {
          "name": "authentication_method",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "mfa_amr_claims_session_id_fkey": {
          "name": "mfa_amr_claims_session_id_fkey",
          "tableFrom": "mfa_amr_claims",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mfa_amr_claims_session_id_authentication_method_pkey": {
          "name": "mfa_amr_claims_session_id_authentication_method_pkey",
          "nullsNotDistinct": false,
          "columns": [
            "session_id",
            "authentication_method"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_challenges": {
      "name": "mfa_challenges",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "verified_at": {
          "name": "verified_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "inet",
          "primaryKey": false,
          "notNull": true
        },
        "otp_code": {
          "name": "otp_code",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_session_data": {
          "name": "web_authn_session_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "mfa_challenge_created_at_idx": {
          "name": "mfa_challenge_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_challenges_auth_factor_id_fkey": {
          "name": "mfa_challenges_auth_factor_id_fkey",
          "tableFrom": "mfa_challenges",
          "tableTo": "mfa_factors",
          "schemaTo": "auth",
          "columnsFrom": [
            "factor_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.mfa_factors": {
      "name": "mfa_factors",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "friendly_name": {
          "name": "friendly_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "factor_type": {
          "name": "factor_type",
          "type": "factor_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "factor_status",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "secret": {
          "name": "secret",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "last_challenged_at": {
          "name": "last_challenged_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_credential": {
          "name": "web_authn_credential",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "web_authn_aaguid": {
          "name": "web_authn_aaguid",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "factor_id_created_at_idx": {
          "name": "factor_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_friendly_name_unique": {
          "name": "mfa_factors_user_friendly_name_unique",
          "columns": [
            {
              "expression": "friendly_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": true,
          "where": "(TRIM(BOTH FROM friendly_name) <> ''::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "mfa_factors_user_id_idx": {
          "name": "mfa_factors_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "unique_phone_factor_per_user": {
          "name": "unique_phone_factor_per_user",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "phone",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "mfa_factors_user_id_fkey": {
          "name": "mfa_factors_user_id_fkey",
          "tableFrom": "mfa_factors",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "mfa_factors_last_challenged_at_key": {
          "name": "mfa_factors_last_challenged_at_key",
          "nullsNotDistinct": false,
          "columns": [
            "last_challenged_at"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "storage.migrations": {
      "name": "migrations",
      "schema": "storage",
      "columns": {
        "id": {
          "name": "id",
          "type": "integer",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "hash": {
          "name": "hash",
          "type": "varchar(40)",
          "primaryKey": false,
          "notNull": true
        },
        "executed_at": {
          "name": "executed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false,
          "default": "CURRENT_TIMESTAMP"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "migrations_name_key": {
          "name": "migrations_name_key",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "storage.objects": {
      "name": "objects",
      "schema": "storage",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "bucket_id": {
          "name": "bucket_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "owner": {
          "name": "owner",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "last_accessed_at": {
          "name": "last_accessed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "default": "now()"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "path_tokens": {
          "name": "path_tokens",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "string_to_array(name, '/'::text)",
            "type": "stored"
          }
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_metadata": {
          "name": "user_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "bucketid_objname": {
          "name": "bucketid_objname",
          "columns": [
            {
              "expression": "bucket_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_objects_bucket_id_name": {
          "name": "idx_objects_bucket_id_name",
          "columns": [
            {
              "expression": "bucket_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "name_prefix_search": {
          "name": "name_prefix_search",
          "columns": [
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_pattern_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "objects_bucketId_fkey": {
          "name": "objects_bucketId_fkey",
          "tableFrom": "objects",
          "tableTo": "buckets",
          "schemaTo": "storage",
          "columnsFrom": [
            "bucket_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.one_time_tokens": {
      "name": "one_time_tokens",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token_type": {
          "name": "token_type",
          "type": "one_time_token_type",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": true
        },
        "token_hash": {
          "name": "token_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "relates_to": {
          "name": "relates_to",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "one_time_tokens_relates_to_hash_idx": {
          "name": "one_time_tokens_relates_to_hash_idx",
          "columns": [
            {
              "expression": "relates_to",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_token_hash_hash_idx": {
          "name": "one_time_tokens_token_hash_hash_idx",
          "columns": [
            {
              "expression": "token_hash",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "hash",
          "with": {}
        },
        "one_time_tokens_user_id_token_type_key": {
          "name": "one_time_tokens_user_id_token_type_key",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "token_type",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "one_time_tokens_user_id_fkey": {
          "name": "one_time_tokens_user_id_fkey",
          "tableFrom": "one_time_tokens",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "one_time_tokens_token_hash_check": {
          "name": "one_time_tokens_token_hash_check",
          "value": "char_length(token_hash) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "public.points_of_interest": {
      "name": "points_of_interest",
      "schema": "",
      "columns": {
        "poi_id": {
          "name": "poi_id",
          "type": "serial",
          "primaryKey": true,
          "notNull": true
        },
        "city_id": {
          "name": "city_id",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "category": {
          "name": "category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "coordinates": {
          "name": "coordinates",
          "type": "point",
          "primaryKey": false,
          "notNull": false
        },
        "estimated_duration": {
          "name": "estimated_duration",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "opening_hours": {
          "name": "opening_hours",
          "type": "json",
          "primaryKey": false,
          "notNull": false
        },
        "address": {
          "name": "address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "points_of_interest_city_id_cities_city_id_fk": {
          "name": "points_of_interest_city_id_cities_city_id_fk",
          "tableFrom": "points_of_interest",
          "tableTo": "cities",
          "columnsFrom": [
            "city_id"
          ],
          "columnsTo": [
            "city_id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.refresh_tokens": {
      "name": "refresh_tokens",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "bigserial",
          "primaryKey": true,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "revoked": {
          "name": "revoked",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "parent": {
          "name": "parent",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "session_id": {
          "name": "session_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "refresh_tokens_instance_id_idx": {
          "name": "refresh_tokens_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_instance_id_user_id_idx": {
          "name": "refresh_tokens_instance_id_user_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_parent_idx": {
          "name": "refresh_tokens_parent_idx",
          "columns": [
            {
              "expression": "parent",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_session_id_revoked_idx": {
          "name": "refresh_tokens_session_id_revoked_idx",
          "columns": [
            {
              "expression": "session_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            },
            {
              "expression": "revoked",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "refresh_tokens_updated_at_idx": {
          "name": "refresh_tokens_updated_at_idx",
          "columns": [
            {
              "expression": "updated_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "refresh_tokens_session_id_fkey": {
          "name": "refresh_tokens_session_id_fkey",
          "tableFrom": "refresh_tokens",
          "tableTo": "sessions",
          "schemaTo": "auth",
          "columnsFrom": [
            "session_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "refresh_tokens_token_unique": {
          "name": "refresh_tokens_token_unique",
          "nullsNotDistinct": false,
          "columns": [
            "token"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "storage.s3_multipart_uploads": {
      "name": "s3_multipart_uploads",
      "schema": "storage",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "in_progress_size": {
          "name": "in_progress_size",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "upload_signature": {
          "name": "upload_signature",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "bucket_id": {
          "name": "bucket_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "user_metadata": {
          "name": "user_metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "idx_multipart_uploads_list": {
          "name": "idx_multipart_uploads_list",
          "columns": [
            {
              "expression": "bucket_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            },
            {
              "expression": "key",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "s3_multipart_uploads_bucket_id_fkey": {
          "name": "s3_multipart_uploads_bucket_id_fkey",
          "tableFrom": "s3_multipart_uploads",
          "tableTo": "buckets",
          "schemaTo": "storage",
          "columnsFrom": [
            "bucket_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "storage.s3_multipart_uploads_parts": {
      "name": "s3_multipart_uploads_parts",
      "schema": "storage",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "upload_id": {
          "name": "upload_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "size": {
          "name": "size",
          "type": "bigint",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "part_number": {
          "name": "part_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "bucket_id": {
          "name": "bucket_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "key": {
          "name": "key",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "etag": {
          "name": "etag",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "owner_id": {
          "name": "owner_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "version": {
          "name": "version",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "s3_multipart_uploads_parts_bucket_id_fkey": {
          "name": "s3_multipart_uploads_parts_bucket_id_fkey",
          "tableFrom": "s3_multipart_uploads_parts",
          "tableTo": "buckets",
          "schemaTo": "storage",
          "columnsFrom": [
            "bucket_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        },
        "s3_multipart_uploads_parts_upload_id_fkey": {
          "name": "s3_multipart_uploads_parts_upload_id_fkey",
          "tableFrom": "s3_multipart_uploads_parts",
          "tableTo": "s3_multipart_uploads",
          "schemaTo": "storage",
          "columnsFrom": [
            "upload_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.saml_providers": {
      "name": "saml_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "entity_id": {
          "name": "entity_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_xml": {
          "name": "metadata_xml",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "metadata_url": {
          "name": "metadata_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "attribute_mapping": {
          "name": "attribute_mapping",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "name_id_format": {
          "name": "name_id_format",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_providers_sso_provider_id_idx": {
          "name": "saml_providers_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_providers_sso_provider_id_fkey": {
          "name": "saml_providers_sso_provider_id_fkey",
          "tableFrom": "saml_providers",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "saml_providers_entity_id_key": {
          "name": "saml_providers_entity_id_key",
          "nullsNotDistinct": false,
          "columns": [
            "entity_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "entity_id not empty": {
          "name": "entity_id not empty",
          "value": "char_length(entity_id) > 0"
        },
        "metadata_url not empty": {
          "name": "metadata_url not empty",
          "value": "(metadata_url = NULL::text) OR (char_length(metadata_url) > 0)"
        },
        "metadata_xml not empty": {
          "name": "metadata_xml not empty",
          "value": "char_length(metadata_xml) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.saml_relay_states": {
      "name": "saml_relay_states",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "request_id": {
          "name": "request_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "for_email": {
          "name": "for_email",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "redirect_to": {
          "name": "redirect_to",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "flow_state_id": {
          "name": "flow_state_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "saml_relay_states_created_at_idx": {
          "name": "saml_relay_states_created_at_idx",
          "columns": [
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_for_email_idx": {
          "name": "saml_relay_states_for_email_idx",
          "columns": [
            {
              "expression": "for_email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "saml_relay_states_sso_provider_id_idx": {
          "name": "saml_relay_states_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "saml_relay_states_flow_state_id_fkey": {
          "name": "saml_relay_states_flow_state_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "flow_state",
          "schemaTo": "auth",
          "columnsFrom": [
            "flow_state_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "saml_relay_states_sso_provider_id_fkey": {
          "name": "saml_relay_states_sso_provider_id_fkey",
          "tableFrom": "saml_relay_states",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "request_id not empty": {
          "name": "request_id not empty",
          "value": "char_length(request_id) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.schema_migrations": {
      "name": "schema_migrations",
      "schema": "auth",
      "columns": {
        "version": {
          "name": "version",
          "type": "varchar(255)",
          "primaryKey": true,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sessions": {
      "name": "sessions",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "factor_id": {
          "name": "factor_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "aal": {
          "name": "aal",
          "type": "aal_level",
          "typeSchema": "auth",
          "primaryKey": false,
          "notNull": false
        },
        "not_after": {
          "name": "not_after",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "refreshed_at": {
          "name": "refreshed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "ip": {
          "name": "ip",
          "type": "inet",
          "primaryKey": false,
          "notNull": false
        },
        "tag": {
          "name": "tag",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sessions_not_after_idx": {
          "name": "sessions_not_after_idx",
          "columns": [
            {
              "expression": "not_after",
              "isExpression": false,
              "asc": false,
              "nulls": "first",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sessions_user_id_idx": {
          "name": "sessions_user_id_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "user_id_created_at_idx": {
          "name": "user_id_created_at_idx",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "timestamptz_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_user_id_fkey": {
          "name": "sessions_user_id_fkey",
          "tableFrom": "sessions",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "auth.sso_domains": {
      "name": "sso_domains",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "sso_provider_id": {
          "name": "sso_provider_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "domain": {
          "name": "domain",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_domains_domain_idx": {
          "name": "sso_domains_domain_idx",
          "columns": [
            {
              "expression": "lower(domain)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "sso_domains_sso_provider_id_idx": {
          "name": "sso_domains_sso_provider_id_idx",
          "columns": [
            {
              "expression": "sso_provider_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sso_domains_sso_provider_id_fkey": {
          "name": "sso_domains_sso_provider_id_fkey",
          "tableFrom": "sso_domains",
          "tableTo": "sso_providers",
          "schemaTo": "auth",
          "columnsFrom": [
            "sso_provider_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "domain not empty": {
          "name": "domain not empty",
          "value": "char_length(domain) > 0"
        }
      },
      "isRLSEnabled": false
    },
    "auth.sso_providers": {
      "name": "sso_providers",
      "schema": "auth",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "resource_id": {
          "name": "resource_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {
        "sso_providers_resource_id_idx": {
          "name": "sso_providers_resource_id_idx",
          "columns": [
            {
              "expression": "lower(resource_id)",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "resource_id not empty": {
          "name": "resource_id not empty",
          "value": "(resource_id = NULL::text) OR (char_length(resource_id) > 0)"
        }
      },
      "isRLSEnabled": false
    },
    "auth.users": {
      "name": "users",
      "schema": "auth",
      "columns": {
        "instance_id": {
          "name": "instance_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "aud": {
          "name": "aud",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "encrypted_password": {
          "name": "encrypted_password",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_confirmed_at": {
          "name": "email_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "invited_at": {
          "name": "invited_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_token": {
          "name": "confirmation_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "confirmation_sent_at": {
          "name": "confirmation_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_token": {
          "name": "recovery_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "recovery_sent_at": {
          "name": "recovery_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_token_new": {
          "name": "email_change_token_new",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change": {
          "name": "email_change",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "email_change_sent_at": {
          "name": "email_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "last_sign_in_at": {
          "name": "last_sign_in_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "raw_app_meta_data": {
          "name": "raw_app_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "raw_user_meta_data": {
          "name": "raw_user_meta_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_super_admin": {
          "name": "is_super_admin",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone": {
          "name": "phone",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "NULL"
        },
        "phone_confirmed_at": {
          "name": "phone_confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "phone_change": {
          "name": "phone_change",
          "type": "text",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "phone_change_token": {
          "name": "phone_change_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "phone_change_sent_at": {
          "name": "phone_change_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "confirmed_at": {
          "name": "confirmed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "as": "LEAST(email_confirmed_at, phone_confirmed_at)",
            "type": "stored"
          }
        },
        "email_change_token_current": {
          "name": "email_change_token_current",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "email_change_confirm_status": {
          "name": "email_change_confirm_status",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "banned_until": {
          "name": "banned_until",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "reauthentication_token": {
          "name": "reauthentication_token",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false,
          "default": "''"
        },
        "reauthentication_sent_at": {
          "name": "reauthentication_sent_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_sso_user": {
          "name": "is_sso_user",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "deleted_at": {
          "name": "deleted_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "is_anonymous": {
          "name": "is_anonymous",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        }
      },
      "indexes": {
        "confirmation_token_idx": {
          "name": "confirmation_token_idx",
          "columns": [
            {
              "expression": "confirmation_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((confirmation_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_change_token_current_idx": {
          "name": "email_change_token_current_idx",
          "columns": [
            {
              "expression": "email_change_token_current",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((email_change_token_current)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "email_change_token_new_idx": {
          "name": "email_change_token_new_idx",
          "columns": [
            {
              "expression": "email_change_token_new",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((email_change_token_new)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "reauthentication_token_idx": {
          "name": "reauthentication_token_idx",
          "columns": [
            {
              "expression": "reauthentication_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((reauthentication_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "recovery_token_idx": {
          "name": "recovery_token_idx",
          "columns": [
            {
              "expression": "recovery_token",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "((recovery_token)::text !~ '^[0-9 ]*$'::text)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_email_partial_key": {
          "name": "users_email_partial_key",
          "columns": [
            {
              "expression": "email",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "text_ops"
            }
          ],
          "isUnique": true,
          "where": "(is_sso_user = false)",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_email_idx": {
          "name": "users_instance_id_email_idx",
          "columns": [
            {
              "expression": "instance_id",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            },
            {
              "expression": "null",
              "asc": true,
              "isExpression": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_instance_id_idx": {
          "name": "users_instance_id_idx",
          "columns": [
            {
              "expression": "instance_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "uuid_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "users_is_anonymous_idx": {
          "name": "users_is_anonymous_idx",
          "columns": [
            {
              "expression": "is_anonymous",
              "isExpression": false,
              "asc": true,
              "nulls": "last",
              "opclass": "bool_ops"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_phone_key": {
          "name": "users_phone_key",
          "nullsNotDistinct": false,
          "columns": [
            "phone"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {
        "users_email_change_confirm_status_check": {
          "name": "users_email_change_confirm_status_check",
          "value": "(email_change_confirm_status >= 0) AND (email_change_confirm_status <= 2)"
        }
      },
      "isRLSEnabled": false
    },
    "public.users_additional_info": {
      "name": "users_additional_info",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "bio": {
          "name": "bio",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "avatar_url": {
          "name": "avatar_url",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "full_name": {
          "name": "full_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "role": {
          "name": "role",
          "type": "user_roles",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "fk_users_additional_info_id_fkey": {
          "name": "fk_users_additional_info_id_fkey",
          "tableFrom": "users_additional_info",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_additional_info_id_unique": {
          "name": "users_additional_info_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "auth.aal_level": {
      "name": "aal_level",
      "schema": "auth",
      "values": [
        "aal1",
        "aal2",
        "aal3"
      ]
    },
    "public.booking_status": {
      "name": "booking_status",
      "schema": "public",
      "values": [
        "pending",
        "confirmed",
        "completed",
        "cancelled"
      ]
    },
    "auth.code_challenge_method": {
      "name": "code_challenge_method",
      "schema": "auth",
      "values": [
        "s256",
        "plain"
      ]
    },
    "auth.factor_status": {
      "name": "factor_status",
      "schema": "auth",
      "values": [
        "unverified",
        "verified"
      ]
    },
    "auth.factor_type": {
      "name": "factor_type",
      "schema": "auth",
      "values": [
        "totp",
        "webauthn",
        "phone"
      ]
    },
    "public.guide_status": {
      "name": "guide_status",
      "schema": "public",
      "values": [
        "pending",
        "approved",
        "rejected"
      ]
    },
    "auth.one_time_token_type": {
      "name": "one_time_token_type",
      "schema": "auth",
      "values": [
        "confirmation_token",
        "reauthentication_token",
        "recovery_token",
        "email_change_token_new",
        "email_change_token_current",
        "phone_change_token"
      ]
    },
    "public.user_roles": {
      "name": "user_roles",
      "schema": "public",
      "values": [
        "visitor",
        "guide",
        "admin"
      ]
    }
  },
  "schemas": {
    "auth": "auth",
    "storage": "storage"
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}